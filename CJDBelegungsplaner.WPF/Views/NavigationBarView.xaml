<UserControl
    x:Class="CJDBelegungsplaner.WPF.Views.NavigationBarView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:CJDBelegungsplaner.WPF.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CJDBelegungsplaner.WPF.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="clr-namespace:CJDBelegungsplaner.WPF.ViewModels"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
            <Setter Property="Margin" Value="1" />
            <Setter Property="Width" Value="100" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <DockPanel
            x:Name="NavigationsBarPanel"
            Width="42"
            LastChildFill="False">

            <DockPanel.Resources>
                <Style TargetType="Grid">
                    <Setter Property="Width" Value="230" />
                </Style>
                <Style TargetType="materialDesign:PackIcon">
                    <Setter Property="Width" Value="30" />
                    <Setter Property="Height" Value="30" />
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="Grid.Column" Value="0" />
                </Style>
                <Style TargetType="RadioButton">
                    <Setter Property="Cursor" Value="Hand" />
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="FontSize" Value="15" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="Margin" Value="5,7,0,0" />
                </Style>
            </DockPanel.Resources>

            <StackPanel
                Height="Auto"
                DockPanel.Dock="Top"
                Orientation="Vertical">



                <ToggleButton
                    x:Name="Tg_Btn"
                    Width="40"
                    Height="40"
                    Margin="3"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    BorderThickness="0"
                    Cursor="Hand">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid>
                                            <materialDesign:PackIcon
                                                Width="25"
                                                Height="25"
                                                Margin="5,7,0,0"
                                                Background="Transparent"
                                                Foreground="LightGray"
                                                Kind="Menu">
                                                <materialDesign:PackIcon.Style>
                                                    <Style TargetType="materialDesign:PackIcon">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </materialDesign:PackIcon.Style>
                                            </materialDesign:PackIcon>
                                            <materialDesign:PackIcon
                                                Width="25"
                                                Height="25"
                                                Margin="5,7,0,0"
                                                Background="Transparent"
                                                Foreground="LightGray"
                                                Kind="Backburger">
                                                <materialDesign:PackIcon.Style>
                                                    <Style TargetType="materialDesign:PackIcon">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="False">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </materialDesign:PackIcon.Style>
                                            </materialDesign:PackIcon>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>

                    <!--  ToggleButton Storyboard  -->
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard>
                                <Storyboard x:Name="HideWrapPanel">
                                    <DoubleAnimation
                                        BeginTime="0:0:0"
                                        Storyboard.TargetName="NavigationsBarPanel"
                                        Storyboard.TargetProperty="Width"
                                        From="155"
                                        To="42"
                                        Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard>
                                <Storyboard x:Name="ShowWrapPanel">
                                    <DoubleAnimation
                                        BeginTime="0:0:0"
                                        Storyboard.TargetName="NavigationsBarPanel"
                                        Storyboard.TargetProperty="Width"
                                        From="42"
                                        To="155"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>

                <!--  RadioButton Reservierungen  -->
                <RadioButton
                    Command="{Binding NavigateToCommand}"
                    CommandParameter="{x:Type viewmodels:ReservationViewModel}"
                    GroupName="NavBarRadioButtons"
                    IsChecked="{Binding IsReservationButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource NavigationBarRadioButtons}"
                    Visibility="{Binding HasPermissionForReservationViewModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Kind="BookOpenBlankVariant" />
                        <TextBlock Text="Reservierungen" />
                    </Grid>
                </RadioButton>

                <!--  RadioButton Bettenbelegungen  -->
                <RadioButton
                    Command="{Binding NavigateToCommand}"
                    CommandParameter="{x:Type viewmodels:OccupancyViewModel}"
                    GroupName="NavBarRadioButtons"
                    IsChecked="{Binding IsOccupancyButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource NavigationBarRadioButtons}"
                    Visibility="{Binding HasPermissionForOccupancyViewModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Kind="Bed" />
                        <TextBlock Text="Bettenbelegung" />
                    </Grid>
                </RadioButton>

                <!--  RadioButton Klassenanzeigen  -->
                <RadioButton
                    Command="{Binding NavigateToCommand}"
                    CommandParameter="{x:Type viewmodels:ClassListViewModel}"
                    GroupName="NavBarRadioButtons"
                    IsChecked="{Binding IsClassButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource NavigationBarRadioButtons}"
                    Visibility="{Binding HasPermissionForClassListViewModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Kind="School" />
                        <TextBlock Text="Klassen" />
                    </Grid>
                </RadioButton>

                <!--  RadioButton Gästeanzeigen  -->
                <RadioButton
                    Command="{Binding NavigateToCommand}"
                    CommandParameter="{x:Type viewmodels:GuestListViewModel}"
                    GroupName="NavBarRadioButtons"
                    IsChecked="{Binding IsGuestListButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource NavigationBarRadioButtons}"
                    Visibility="{Binding HasPermissionForGuestListViewModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Kind="People" />
                        <TextBlock Text="Gäste" />
                    </Grid>
                </RadioButton>

                <!--  RadioButton Firmenansicht  -->
                <RadioButton
                    Command="{Binding NavigateToCommand}"
                    CommandParameter="{x:Type viewmodels:CompanyListViewModel}"
                    GroupName="NavBarRadioButtons"
                    IsChecked="{Binding IsCompanyListButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Style="{StaticResource NavigationBarRadioButtons}"
                    Visibility="{Binding HasPermissionForCompanyListViewModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Kind="HomeSilo" />
                        <TextBlock Text="Firmen" />
                    </Grid>
                </RadioButton>

            </StackPanel>

            <!--  RadioButton Logout  -->
            <RadioButton
                x:Name="LogOut"
                Command="{Binding LogoutCommand}"
                DockPanel.Dock="Bottom"
                GroupName="NavBarRadioButtons"
                Style="{StaticResource NavigationBarRadioButtons}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <materialDesign:PackIcon Kind="Logout" />
                    <TextBlock Text="LogOut" />
                </Grid>
            </RadioButton>

            <!--  PopupBox fuer Profil  -->
            <materialDesign:PopupBox
                Margin="0,0,0,0"
                materialDesign:RippleAssist.Feedback="Transparent"
                DockPanel.Dock="Bottom">
                <StackPanel>
                    <TextBlock Text="{Binding UserName}" />
                    <Separator />
                    <ToggleButton
                        x:Name="DarkModeToggleButton"
                        Grid.Column="1"
                        materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=LightbulbOn}"
                        Click="MenuDarkModeButton_Click"
                        Content="{materialDesign:PackIcon Kind=LightbulbOutline}"
                        IsChecked="False"
                        Style="{StaticResource MaterialDesignActionToggleButton}" />
                    <Separator />
                    <Button Command="{Binding OpenChangePasswordDialogCommand}" Content="Passwort ändern" />
                </StackPanel>
                <materialDesign:PopupBox.ToggleContent>
                    <Border
                        Background="{StaticResource SecondaryHueMidBrush}"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <Grid Width="230" HorizontalAlignment="Stretch">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#2892bf" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <materialDesign:PackIcon
                                Grid.Column="0"
                                Width="30"
                                Height="30"
                                Margin="3"
                                Kind="AccountCircle" />
                            <TextBlock
                                Grid.Column="1"
                                Width="230"
                                Margin="4,7,0,0"
                                FontSize="17"
                                Foreground="LightGray"
                                Text="Profil" />
                        </Grid>
                    </Border>
                </materialDesign:PopupBox.ToggleContent>
            </materialDesign:PopupBox>

            <!--  RadioButton Benutzer  -->
            <RadioButton
                Command="{Binding NavigateToCommand}"
                CommandParameter="{x:Type viewmodels:UserListViewModel}"
                DockPanel.Dock="Bottom"
                GroupName="NavBarRadioButtons"
                IsChecked="{Binding IsUserListButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource NavigationBarRadioButtons}"
                Visibility="{Binding HasPermissionForUserListViewModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <materialDesign:PackIcon Kind="Account" />
                    <TextBlock Text="Benutzer" />
                </Grid>
            </RadioButton>

            <!--  RadioButton Logs  -->
            <RadioButton
                Command="{Binding NavigateToCommand}"
                CommandParameter="{x:Type viewmodels:LogEntryListViewModel}"
                DockPanel.Dock="Bottom"
                GroupName="NavBarRadioButtons"
                IsChecked="{Binding IsLogEntryButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource NavigationBarRadioButtons}"
                Visibility="{Binding HasPermissionForLogEntryListViewModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <materialDesign:PackIcon Kind="Notebook" />
                    <TextBlock Text="Logs" />
                </Grid>
            </RadioButton>

        </DockPanel>
    </Grid>
</UserControl>
