<UserControl
    x:Class="CJDBelegungsplaner.WPF.Views.ClassListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:CJDBelegungsplaner.WPF.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CJDBelegungsplaner.WPF.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <!--
        Eingabe Form als Overlay
        ._____                             _____   _         _
        |  __ \                           |  __ \ (_)       | |
        | |__) |___   _ __   _   _  _ __  | |  | | _   __ _ | |  ___    __ _
        |  ___// _ \ | '_ \ | | | || '_ \ | |  | || | / _` || | / _ \  / _` |
        | |   | (_) || |_) || |_| || |_) || |__| || || (_| || || (_) || (_| |
        |_|    \___/ | .__/  \__,_|| .__/ |_____/ |_| \__,_||_| \___/  \__, |
        .............| |           | |                                  __/ |
        .............|_|           |_|                                 |___/
    -->
    <materialDesign:DialogHost
        CloseOnClickAway="False"
        DialogTheme="Inherit"
        IsOpen="{Binding IsDialogOpen}"
        Placement="Center">
        <materialDesign:DialogHost.DialogContent>
            <ContentControl Content="{Binding CurrentFormViewModel}" />
        </materialDesign:DialogHost.DialogContent>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="24"
                Text="Klassen" />

            <!--
                Filter
                .______  _  _  _               ______
                |  ____|(_)| || |             |  ____|
                | |__    _ | || |_  ___  _ __ | |__  ___   _ __  _ __ ___
                |  __|  | || || __|/ _ \| '__||  __|/ _ \ | '__|| '_ ` _ \
                | |     | || || |_|  __/| |   | |  | (_) || |   | | | | | |
                |_|     |_||_| \__|\___||_|   |_|   \___/ |_|   |_| |_| |_|
            -->
            <components:FilterFormGroupBox
                Grid.Row="1"
                Margin="10,0,0,0"
                HorizontalAlignment="Left"
                DataContext="{Binding}">

                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">
                            <Setter Property="Width" Value="130" />
                            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
                        </Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}" TargetType="DatePicker">
                            <Setter Property="Width" Value="100" />
                            <Setter Property="Margin" Value="10,0,0,0" />
                            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True" />
                        </Style>
                    </StackPanel.Resources>

                    <TextBox materialDesign:HintAssist.Hint="Name" Text="{Binding Filter.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <DatePicker
                        Width="120"
                        materialDesign:HintAssist.Hint="Von"
                        Text="{Binding Filter.DateFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <DatePicker
                        Width="120"
                        materialDesign:HintAssist.Hint="Bis"
                        Text="{Binding Filter.DateTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </StackPanel>

            </components:FilterFormGroupBox>

            <!--
                Hinzufügen Button
                .............._      _  ____          _    _
                ..../\       | |    | ||  _ \        | |  | |
                .../  \    __| |  __| || |_) | _   _ | |_ | |_  ___   _ __
                ../ /\ \  / _` | / _` ||  _ < | | | || __|| __|/ _ \ | '_ \
                ./ ____ \| (_| || (_| || |_) || |_| || |_ | |_| (_) || | | |
                /_/    \_\\__,_| \__,_||____/  \__,_| \__| \__|\___/ |_| |_|
            -->
            <Button
                Grid.Row="1"
                Margin="0,0,15,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Command="{Binding ShowClassFormCommand}"
                Style="{StaticResource MaterialDesignFloatingActionSecondaryButton}"
                ToolTip="Gast anlegen">
                <materialDesign:PackIcon
                    Width="25"
                    Height="25"
                    Kind="Plus" />
            </Button>

            <!--
                Class Liste
                .._____  _                   _       _       _
                ./ ____|| |                 | |     (_)     | |
                | |     | |  __ _  ___  ___ | |      _  ___ | |_  ___
                | |     | | / _` |/ __|/ __|| |     | |/ __|| __|/ _ \
                | |____ | || (_| |\__ \\__ \| |____ | |\__ \| |_|  __/
                .\_____||_| \__,_||___/|___/|______||_||___/ \__|\___|
            -->
            <DataGrid
                Grid.Row="2"
                ItemsSource="{Binding ClassList.View}"
                Style="{StaticResource CommonDataGrid}">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                    <DataGridTextColumn Binding="{Binding Description}" Header="Beschreibung" />
                    <DataGridTextColumn Binding="{Binding GuestCount}" Header="Anzahl Mitglieder" />
                    <DataGridTemplateColumn Header="Farbe">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border
                                    Width="50"
                                    Height="15"
                                    CornerRadius="10">
                                    <Border.Background>
                                        <SolidColorBrush Color="{Binding Color}" />
                                    </Border.Background>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Created}" Header="Erstellt" />
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button
                                    Command="{Binding Path=DataContext.ShowClassFormCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding}"
                                    Style="{DynamicResource CommonDataGridIconButton}"
                                    ToolTip="Bearbeiten">
                                    <materialDesign:PackIcon Kind="Edit" Style="{DynamicResource CommonDataGridPackIcon}" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button
                                    Command="{Binding Path=DataContext.ShowGuestsCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding}"
                                    Style="{DynamicResource CommonDataGridIconButton}"
                                    ToolTip="Zeige Mitglieder">
                                    <materialDesign:PackIcon Kind="AccountMultiple" Style="{DynamicResource CommonDataGridPackIcon}" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button
                                    Command="{Binding Path=DataContext.ShowDeleteMessageCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding}"
                                    Style="{DynamicResource CommonDataGridIconButton}"
                                    ToolTip="Löschen">
                                    <materialDesign:PackIcon Kind="Delete" Style="{DynamicResource CommonDataGridPackIcon}" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

        </Grid>

    </materialDesign:DialogHost>
</UserControl>
