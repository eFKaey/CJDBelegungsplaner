<UserControl x:Class="CJDBelegungsplaner.WPF.Components.CustomTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CJDBelegungsplaner.WPF.Components"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <TextBox DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:CustomTextBox}}}">
        <TextBox.Resources>
            <Style TargetType="{x:Type TextBox}">
                <!--<Setter Property="Height" Value="35"/>-->
                <!--<Setter Property="Width" Value="150"/>-->
                <!--<Setter Property="Margin" Value="0,25,0,0"/>-->
                <!-- DynamicResource werden zur Laufzeit geladen -->
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <!-- erstellte Farbdefinition wird benutzt -->
                <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="FontSize" Value="{Binding FontSize}"/>
                <Setter Property="Text" Value="{Binding Text, UpdateSourceTrigger=PropertyChanged}"/>
                <Setter Property="FontFamily" Value="{Binding TextFontFamily}"/>

                <!-- Custom Textbox ab hier -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ControlTemplate.Resources>

                                <!-- Storyboard für Text nach oben Animation -->
                                <Storyboard x:Key="CW-Inline-input-up">
                                    <!-- x-Achsen Animation -->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-6.667">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <!-- y-Achsen Animation -->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-15.733">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <!-- Textfarbe Animation -->
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0:0:0.6" Value="LightGray"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <!-- Text-Fett Animation -->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="10"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>

                                <!-- Storyboard für Text nach unten Animation -->
                                <Storyboard x:Key="CW-Inline-input-down">
                                    <!-- x-Achsen Animation -->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <!-- y-Achsen Animation -->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <QuinticEase EasingMode="EaseInOut"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <!-- Textfarbe Animation -->
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0:0:0.6" Value="Gray"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <!-- Text-Fett Animation -->
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.FontSize)" Storyboard.TargetName="textBlock">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="14"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>

                            </ControlTemplate.Resources>

                            <!-- Das eigentliche Layout -->
                            
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock
                                    Grid.Row="0"
                                    Text="{Binding Label}"
                                    FontSize="14"
                                    Visibility="Hidden"/>

                                <Border
                                    x:Name="border" 
                                    Grid.Row="1" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="0 0 0 1" 
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="5"
                                    SnapsToDevicePixels="True">
                                    <ScrollViewer 
                                        x:Name="PART_ContentHost" 
                                        Focusable="false" 
                                        HorizontalScrollBarVisibility="Hidden" 
                                        VerticalScrollBarVisibility="Hidden"/>
                                </Border>

                                <TextBlock 
                                    Grid.Row="1"
                                    x:Name="textBlock" 
                                    Text="{Binding Label}"
                                    VerticalAlignment="Center" 
                                    Margin="8,0"
                                    FontSize="{Binding FontSize}"
                                    FontFamily="Arial"
                                    Foreground="Gray" 
                                    RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>

                                <TextBlock
                                    Grid.Row="2"
                                    Text="{Binding ErrorMessage}"
                                    FontFamily="Arial"
                                    Foreground="Red"/>

                            </Grid>

                            <!-- ControlTemplate Trigger -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                </Trigger>

                                <!--<Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>

                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CW-Inline-input-up}" />
                            </Trigger.EnterActions>
                            
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CW-Inline-input-down}" />
                            </Trigger.ExitActions>
                        </Trigger>-->

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsKeyboardFocused" Value="false"/>
                                        <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource CW-Inline-input-down}" />
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource CW-Inline-input-up}" />
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!-- Style (Textbox?) Trigger -->
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
        </TextBox.Resources>            
    </TextBox>
</UserControl>
