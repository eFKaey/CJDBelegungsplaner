// <auto-generated />
using System;
using CJDBelegungsplaner.Domain.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CJDBelegungsplaner.Domain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Information")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Argb")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.ClassReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("ClassReservations");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Information")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.GuestReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<int>("GuestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestReservations");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GuestId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("UserId");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Occupancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Argb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<int>("GuestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Information")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.HasIndex("GuestId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Occupancies");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Unavailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cause")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.ToTable("Unavailabilities");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogout")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassReservationGuest", b =>
                {
                    b.Property<int>("ClassReservationsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuestsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassReservationsId", "GuestsId");

                    b.HasIndex("GuestsId");

                    b.ToTable("ClassReservationGuest");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.ClassReservation", b =>
                {
                    b.HasOne("CJDBelegungsplaner.Domain.Models.Class", "Class")
                        .WithMany("Reservations")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Company", b =>
                {
                    b.OwnsOne("CJDBelegungsplaner.Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .HasColumnType("TEXT");

                            b1.Property<string>("HouseNumber")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostCode")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .HasColumnType("TEXT");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Companies");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Guest", b =>
                {
                    b.HasOne("CJDBelegungsplaner.Domain.Models.Class", "Class")
                        .WithMany("Guests")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CJDBelegungsplaner.Domain.Models.Company", "Company")
                        .WithMany("Guests")
                        .HasForeignKey("CompanyId");

                    b.OwnsOne("CJDBelegungsplaner.Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int>("GuestId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .HasColumnType("TEXT");

                            b1.Property<string>("HouseNumber")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostCode")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .HasColumnType("TEXT");

                            b1.HasKey("GuestId");

                            b1.ToTable("Guests");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.GuestReservation", b =>
                {
                    b.HasOne("CJDBelegungsplaner.Domain.Models.Guest", "Guest")
                        .WithMany("Reservations")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.LogEntry", b =>
                {
                    b.HasOne("CJDBelegungsplaner.Domain.Models.Guest", "Guest")
                        .WithMany("LogEntries")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CJDBelegungsplaner.Domain.Models.User", "User")
                        .WithMany("LogEntries")
                        .HasForeignKey("UserId");

                    b.Navigation("Guest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Occupancy", b =>
                {
                    b.HasOne("CJDBelegungsplaner.Domain.Models.Bed", "Bed")
                        .WithMany("Occupancies")
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CJDBelegungsplaner.Domain.Models.Guest", "Guest")
                        .WithMany("Occupancies")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CJDBelegungsplaner.Domain.Models.GuestReservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId");

                    b.Navigation("Bed");

                    b.Navigation("Guest");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Unavailability", b =>
                {
                    b.HasOne("CJDBelegungsplaner.Domain.Models.Bed", "Bed")
                        .WithMany("Unavailabilities")
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bed");
                });

            modelBuilder.Entity("ClassReservationGuest", b =>
                {
                    b.HasOne("CJDBelegungsplaner.Domain.Models.ClassReservation", null)
                        .WithMany()
                        .HasForeignKey("ClassReservationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CJDBelegungsplaner.Domain.Models.Guest", null)
                        .WithMany()
                        .HasForeignKey("GuestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Bed", b =>
                {
                    b.Navigation("Occupancies");

                    b.Navigation("Unavailabilities");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Class", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Company", b =>
                {
                    b.Navigation("Guests");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.Guest", b =>
                {
                    b.Navigation("LogEntries");

                    b.Navigation("Occupancies");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CJDBelegungsplaner.Domain.Models.User", b =>
                {
                    b.Navigation("LogEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
